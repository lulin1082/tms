<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="cn.tedu.ttms"/>
    <!-- Mapper接口所在包，Spring会自动查找其下的Mapper -->
    <import resource="spring-mybatis.xml"/>
    <import resource="spring-redis.xml"/>
    <import resource="spring-pool.xml"/>
    <import resource="spring-mvc.xml"/>
    <!--= shiro工厂bean配置 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- shiro的核心安全接口 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的连接 -->
        <property name="loginUrl" value="/toLogin.do"></property>
        <!-- 登录成功后要跳转的连接(此处已经在登录中处理了) -->
        <!-- <property name="successUrl" value="/indexUI.do"></property>
        <property name="unauthorizedUrl" value="/indexUI.do"></property>-->

        <!-- 访问未对其授权的资源时,要跳转的连接
        <property name="unauthorizedUrl" value="/default.html"></property>-->
        <!-- shiro连接约束配置 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- 对静态资源设置允许匿名访问 -->
                <!--/=anon-->
                /toLogin.do =  anon
                /indexUI.do = anon
                /images/** = anon
               <!-- /WEB-INF/pages/** = anon-->
                /js/** = anon
                /css/** = anon
                /static/** = anon
                /bootstrap/** = anon
                /jquery/** = anon
                <!-- 可匿名访问路径，例如：验证码、登录连接、退出连接等 -->
                /confirmUser.do = anon
                <!-- 退出 -->
                /logout.do = logout  <!-- 会调用Subject的logout方法,此方法会将session清空 -->
                <!-- 剩余其他路径，必须认证通过才可以访问 -->
                <!--/** = authc-->
              /** = anon
            </value>
        </property>
    </bean>


    <!-- 自定义Realm -->
    <bean id="userRealm" class="cn.tedu.ttms.common.realm.UserRealm">
        <!-- 配置凭证算法匹配器 -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
     </bean>

    <bean id="credentialsMatcher"  class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="MD5"/>
        <property name="hashIterations" value="1"/>
    </bean>



    <!-- 配置shiro安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="RedisCacheManager"/>
        <property name="rememberMeManager" ref="remeberMeManager"/>
    </bean>

    <bean id="RedisCacheManager"     class="cn.tedu.ttms.common.cache.RedisCacheManager"/>
    <bean id="sessionDao" class="cn.tedu.ttms.common.session.RedisSessionDao"/>
    <!--<bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager"/>-->
    <bean id="sessionManager" class="cn.tedu.ttms.common.session.UserSessionManager">
        <property name="sessionDAO" ref="sessionDao"/>
    </bean>

    <bean id="remeberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager"/>

    <bean id="cookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="remeberMe"/>
        <property name="maxAge" value="20000000"/>
    </bean>



    <!--Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!--启用shiro注解权限检查-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


</beans>