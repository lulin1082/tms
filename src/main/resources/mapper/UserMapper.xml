<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
 classpath:mapper/ProjectMapper.xml
 -->
<mapper namespace="cn.tedu.ttms.system.dao.UsersDao">

    <select id="findRole" parameterType="java.lang.Long" resultType="java.lang.String">
         select  r.name FROM sys_roles r, sys_user_roles u_r where  u_r.user_id=#{userId} and  u_r.role_id=r.id;
    </select>

    <!-- 查询用户列表 -->
    <select id="findPageObjects" resultType="map">
        select
        u.id,
        u.username,
        u.email   ,
        mobile,
        valid
        from
        sys_users u
        <where>
            <if test="entity!=null and entity.username!=null and entity.username!=''">
                 u.username   LIKE CONCAT('%',#{entity.username},'%')
            </if>
            <if test="entity!=null and entity.email!=null and entity.email!=''">
                u.email LIKE CONCAT('%',#{entity.email},'%')
            </if>
            <if test="entity!=null and entity.mobile!=null and entity.mobile!=''">
                u.mobile LIKE CONCAT('%',#{entity.mobile},'%')
            </if>
        </where>
        <if test="pageObject!=null and pageObject.pageSize != 0">
            LIMIT #{pageObject.startIndex},#{pageObject.pageSize}
        </if>
    </select>
    <!-- 查询记录总条数 -->
    <select id="getRowCounts" parameterType="cn.tedu.ttms.system.entity.User" resultType="java.lang.Integer">
        select count(*) from sys_users
        <where>
            <if test="entity!=null and entity.username!=null and entity.username!=''">
                username LIKE CONCAT('%',#{entity.username},'%')
            </if>
            <if test="entity!=null and entity.email!=null and entity.email!=''">
                email LIKE CONCAT('%',#{entity.email},'%')
            </if>
            <if test="entity!=null and entity.mobile!=null and entity.mobile!=''">
                mobile LIKE CONCAT('%',#{entity.mobile},'%')
            </if>
        </where>
    </select>
    <!-- 保存用户信息 -->
    <insert id="save" parameterType="cn.tedu.ttms.system.entity.User" useGeneratedKeys="true" keyProperty="entity.id">
        insert into
        sys_users
        (username,password,salt,email,mobile,valid,createdTime,modifiedTime,
        createdUser,modifiedUser)
        values
        (#{entity.username},#{entity.password},#{entity.salt},#{entity.email},#{entity.mobile},
        1,NOW(),NOW(),#{entity.createdUser},#{entity.modifiedUser});
    </insert>

    <select id="findById" parameterType="java.lang.Long" resultType="cn.tedu.ttms.system.entity.User">
        SELECT * FROM  sys_users u WHERE u.id=#{id}
    </select>



    <!-- 根据id查询用户信息 -->
    <select id="findObjectById" parameterType="java.lang.Long" resultType="map">
        select
        username,
        password,
        email,
        mobile
        from
        sys_users
        where
        id = #{id}
    </select>
    <!-- 修改更新用户信息 -->
    <update id="updateObject" parameterType="cn.tedu.ttms.system.entity.User">
        UPDATE
        sys_users
        SET
        username = #{entity.username},
        password = #{entity.password},
        salt = #{entity.salt},
        email = #{entity.email},
        mobile = #{entity.mobile},
        modifiedTime = NOW(),
        modifiedUser = #{entity.modifiedUser}
        WHERE
        id = #{entity.id}
    </update>
    <!-- 切换用户启用/禁用状态 -->
    <update id="changeState">
        UPDATE
        sys_users
        SET
        valid = #{valid}
        WHERE
        id = #{id}
    </update>

    <!-- 根据用户名查询用户信息 -->
    <select id="findObjectByName" parameterType="java.lang.String" resultType="cn.tedu.ttms.system.entity.User">
        SELECT * FROM sys_users
        WHERE
        valid = 1
        AND
        username = #{username}
    </select>

   <!-- 判断用户是否存在-->
    <select id="isExist" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(*) from sys_users where valid=1 and username = #{username}
    </select>

    <!--查询用户得权限-->
    <select id="findPermission" parameterType="java.lang.Long" resultType="java.lang.String">
       select  r.permission FROM  sys_function r ,sys_role_function r_r where r.id=r_r.function_id and r_r.role_id
       in
       ( select u_r.role_id from sys_user_roles u_r WHERE u_r.user_id=#{userId})
    </select>

    <!--查询用户可见的菜单-->
     <select id="menuList" parameterType="java.lang.Integer"  resultType="map">
       select
       r.id,
       r.name,
       r.url,
       r.parentId
       from sys_function r,sys_role_function r_r
       where r.id=r_r.function_id and r.type=1 and role_id
       in
       ( select role_id from sys_user_roles u_r where u_r.user_id=#{id} );
    </select>



  <!--!&#45;&#45; 一般涉及到多表查询时,返回的结果通常会封装到map对象
       对应dao中的方法:
    List<Map<String,Object> findPageObjects(...);
   &ndash;&gt;
  <select id="findPageObjects" resultType="map">
     select t.*,p.name projectName
     from tms_teams t join tms_projects p
     on t.projectId=p.id
     <where>
       <if test='projectName!=null and projectName!=""'>
            p.name like CONCAT ("%",#{projectName},"%")
       </if>
       <if test='valid!=null'>
            and t.valid=#{valid}
       </if>
     </where>
     ORDER BY t.createdTime desc
     LIMIT #{startIndex},#{pageSize}
  </select>
  &lt;!&ndash; 统计记录数(要根据记录数计算总页数) &ndash;&gt;
  <select id="getRowCount" 
      resultType="java.lang.Integer">
      select count(*)
      from tms_teams t join tms_projects p
      on t.projectId=p.id
      <where>
       <if test='projectName!=null and projectName!=""'>
          p.name like CONCAT ("%",#{projectName},"%")
       </if>
       <if test='valid!=null'>
          and t.valid=#{valid}
       </if>
     </where>
  </select>

  &lt;!&ndash; 插入项目信息 &ndash;&gt;
  <insert id="insertObject" 
   parameterType="cn.tedu.ttms.team.entity.Team">
   
      INSERT INTO tms_teams
      (
      id,
      name,
      projectId,
      valid,
      note,
      createdUser,
      modifiedUser,
      createdTime,
      modifiedTime
      )
      values(
      #{id},
      #{name},
      #{projectId},
      #{valid},
      #{note},
      #{createdUser},
      #{modifiedUser},
      NOW(),
      NOW()) 
  </insert>-->
 </mapper> 