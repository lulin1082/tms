<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <context:annotation-config/>

  <!--  <context:component-scan base-package="cn.tedu.ttms">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>-->


        <context:component-scan base-package="cn.tedu.ttms"/>


    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
    <mvc:annotation-driven/>

    <!-- 静态资源处理， css， js， imgs -->
    <mvc:resources mapping="/*" location="/"/>

    <aop:config proxy-target-class="true"/>

    <!-- &lt;!&ndash; spring mvc 注解及类型转换 &ndash;&gt;
     <mvc:annotation-driven conversion-service="conversionService" />
     <bean id="conversionService"
           class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
     </bean>-->
    <!-- spring mvc 视图解析器 -->
    <!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- 文件上传需要配置此解析器
       找类的快捷键为:ctrl+shift+t
       查看本类方法：ctrl+o,假如想继续看父类方法继续ctrl+o
    -->

    <!-- 配置ViewResolver。 可以用多个ViewResolver。 使用order属性排序。 InternalResourceViewResolver放在最后。 -->
    <!-- <bean
             class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
         <property name="order" value="1" />
         <property name="mediaTypes">
             <map>
                 <entry key="json" value="application/json" />
                 <entry key="xml" value="application/xml" />
                 <entry key="htm" value="text/html" />
             </map>
         </property>

         <property name="defaultViews">
             <list>
                 &lt;!&ndash; JSON View &ndash;&gt;
                 <bean
                         class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
                 </bean>
             </list>
         </property>
         <property name="ignoreAcceptHeader" value="true" />
     </bean>-->
    <bean id="sourceAdvisor" class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>


</beans>