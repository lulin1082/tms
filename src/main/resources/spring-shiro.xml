<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <import resource="spring-pool.xml"/>
    <import resource="spring-redis.xml"/>
    <import resource="spring-mybatis.xml"/>
    <context:component-scan base-package="cn.tedu.ttms"/>
    <!--= shiro工厂bean配置 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- shiro的核心安全接口 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的连接 -->
        <property name="loginUrl" value="/toLogin.do"/>
         <!--登录成功后要跳转的连接(此处已经在登录中处理了)
         <property name="successUrl" value="/indexUI.do"></property>-->
          <!--访问未对其授权的资源时,要跳转的连接-->
        <property name="unauthorizedUrl" value="/unauthorized.do"/>

       <!-- shiro连接约束配置-->
        <property name="filterChainDefinitions">
            <value>
                <!--  /testRole = roles["admin"]
                  /testRole1 = roles["admin","admin1"]
                  /testPerms = perms["user:delete"]
                  /testPerms1 = perms["user:delete","user:add"]-->
                <!--/testRole = roles["admin","admin1"]-->
                <!-- 对静态资源设置允许匿名访问 -->
                / = anon
                /toLogin.do = anon
                /indexUI.do = anon
                /images/** = anon
                <!-- /WEB-INF/pages/** = anon-->
                /js/** = anon
                /css/** = anon
                /static/** = anon
                /bootstrap/** = anon
                /jquery/** = anon
                <!-- 可匿名访问路径，例如：验证码、登录连接、退出连接等 -->
                /confirmUser.do = anon
                /logout.do = logout  <!-- 会调用Subject的logout方法,此方法会将session清空 -->
                <!-- 剩余其他路径，必须认证通过才可以访问 -->
                /** = authc
            </value>
        </property>
        <property name="filters">
            <util:map>
                <entry key="rolesOr" value-ref="rolesOrFilter"/>
            </util:map>
        </property>
    </bean>

    <bean id="rolesOrFilter" class="cn.tedu.ttms.common.filter.RolesOrFilter"/>

    <!-- 自定义Realm -->
    <bean id="userRealm" class="cn.tedu.ttms.common.realm.UserRealm">
        <!-- 配置凭证算法匹配器 -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="MD5"/>
        <property name="hashIterations" value="1"/>
       <property name="storedCredentialsHexEncoded" value="true"/>

    </bean>


    <!-- 配置shiro安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
      <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="RedisCacheManager"/>
        <property name="rememberMeManager" ref="cookieRememberMeManager"/>
    </bean>

    <bean id="RedisCacheManager" class="cn.tedu.ttms.common.cache.RedisCacheManager"/>
    <bean id="sessionDao" class="cn.tedu.ttms.common.session.RedisSessionDao"/>

    <!-- 使用默认的 sessionManager 会频繁的操作读 redis 使用自定义的 CustomSessionManager代替Default -->
     <bean id="defaultSessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager"/>
    <bean id="sessionManager" class="cn.tedu.ttms.common.session.UserSessionManager">
        <property name="sessionDAO" ref="sessionDao"/>
    </bean>

    <bean id="cookieRememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="cookie3"/>
    </bean>

    <bean id="cookie3" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="maxAge" value="600000"/>
    </bean>

    <!--Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!--启用shiro注解权限检查-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>



</beans>